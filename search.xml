<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[APP分享功能的实现]]></title>
      <url>http://artharyoung.github.io/2016/06/04/2016-6-4/</url>
      <content type="html"><![CDATA[<img src="/images/20160531090847.jpg">
<ul>
<li>说起在APP中添加分享功能，也在项目开发中集成过第三方的社会化组件，功能做出来了之后就发现坑其实挺多的，比如APP体积增加3~4MB，微信、微博等社区集成都需要申请appkey等。当然，一般第三方的社会化组件往往不只是集成分享功能，还会集成账号授权登陆等，而系统的分享功能就比较单纯了。这两天学习了一下系统自带的分享功能，写一篇笔记记录一下。<a id="more"></a>
<h2 id="通过Intent向其他应用发送分享内容"><a href="#通过Intent向其他应用发送分享内容" class="headerlink" title="通过Intent向其他应用发送分享内容"></a>通过Intent向其他应用发送分享内容</h2>先看一下发送邮件的Intent：</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent(Intent.ACTION_SENDTO);</span><br><span class="line">intent.setData(Uri.parse(<span class="string">"mailto:artharyoungcn@gmail.com"</span>));</span><br><span class="line">intent.putExtra(Intent.EXTRA_SUBJECT, <span class="string">"title"</span>);</span><br><span class="line">intent.putExtra(Intent.EXTRA_TEXT, <span class="string">"desc"</span>);</span><br><span class="line"><span class="keyword">if</span> (intent.resolveActivity(getPackageManager()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">    startActivity(intent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>如果手机上已经安装了邮件的客户端，这个Intent将匹配action直接拉起邮件客户端。</p>
<h3 id="分享文本的Intent："><a href="#分享文本的Intent：" class="headerlink" title="分享文本的Intent："></a>分享文本的Intent：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.setAction(Intent.ACTION_SEND);</span><br><span class="line">intent.putExtra(Intent.EXTRA_TEXT, <span class="string">"send message to someone"</span>);</span><br><span class="line">intent.setType(<span class="string">"text/plain"</span>);</span><br><span class="line">startActivity(intent);</span><br></pre></td></tr></table></figure>
<p>一般我们使用的手机上能匹配这个action的app都不止一个，QQ、微信、微博，这些社交类应用自不必说。蓝牙，NFC等一般也都会匹配这个action。所以系统会显示一个对话框供用户选择，并且会提示用户设置默认分享的APP,个人认为这个并没有什么用，因为我们无法保证用户每一次都分享到同一个app.我们可以使用Intent.createChooser()来设置弹出框的标题，并保证每次都弹出选择框，即使设置了默认分享。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.setAction(Intent.ACTION_SEND);</span><br><span class="line">intent.putExtra(Intent.EXTRA_TEXT, <span class="string">"send message to someone"</span>);</span><br><span class="line">intent.setType(<span class="string">"text/plain"</span>);</span><br><span class="line">startActivity(Intent.createChooser(intent, <span class="string">"实现分享"</span>));</span><br></pre></td></tr></table></figure>
<p>以上只是分享文本，在实际的开发过程中往往还需要分享图片。</p>
<h3 id="数据流分享（这里以图片分享为例）"><a href="#数据流分享（这里以图片分享为例）" class="headerlink" title="数据流分享（这里以图片分享为例）"></a>数据流分享（这里以图片分享为例）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Bitmap bm = BitmapFactory.decodeResource(getResources(),R.drawable.chrome);</span><br><span class="line">String path = MediaStore.Images.Media.insertImage(getContentResolver(), bm, <span class="string">""</span>, <span class="string">"desc"</span>);</span><br><span class="line"></span><br><span class="line">Uri imageUri = Uri.parse(path);</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.setAction(Intent.ACTION_SEND);</span><br><span class="line">intent.putExtra(Intent.EXTRA_STREAM, imageUri);</span><br><span class="line">intent.setType(<span class="string">"image/*"</span>);</span><br><span class="line">startActivity(Intent.createChooser(intent, <span class="string">"实现分享"</span>));</span><br></pre></td></tr></table></figure>
<p>这里需要提供一个供第三方程序访问的Uri,一般有以下几个方案：</p>
<ul>
<li>把数据写到外部存储（SD卡）上，使用Uri.fromFile()创建一个file://形式的Uri。<br>这个形式的Uri并不是所有程序都能处理。</li>
<li>在自己程序文件夹下用MODE_WORLD_READABLE模式使用openFileOutput()把数据写入文件，<br>之后再用getFileStreamPath()返回一个File。用Uri.fromFile()来创建一个file://样式的Uri。</li>
<li>图片，音频，视频等媒体文件可以用scanFile()扫描然后加到系统媒体库（MediaStore）中，<br>onScanCompleted()回调方法会返回一个content://样式的Uri。</li>
<li>图片还可以用insertImage()来加到媒体库(MediaStore)中，然后会返回一个content://样式的Uri。</li>
<li>在ContentProvider中保存数据，给其他APP提供访问权限。</li>
</ul>
<p>这里我们稍微对比下友盟社会化组件的存储方式，在UMImage.class这个类里面可以发现它在SD卡上自己创建了一个缓存文件夹：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> File <span class="title">getCache</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    String var1;</span><br><span class="line">    <span class="keyword">if</span>(DeviceConfig.isSdCardWrittenable()) &#123;</span><br><span class="line">        var1 = Environment.getExternalStorageDirectory().getCanonicalPath();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(TextUtils.isEmpty(<span class="keyword">this</span>.b)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IOException(<span class="string">"dirpath is unknow"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        var1 = <span class="keyword">this</span>.b;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    File var2 = <span class="keyword">new</span> File(var1 + <span class="string">"/umeng_cache/"</span>);</span><br><span class="line">    <span class="keyword">if</span>(var2 != <span class="keyword">null</span> &amp;&amp; !var2.exists()) &#123;</span><br><span class="line">        var2.mkdirs();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> var2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这里需要添加SD卡的读写权限：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 在SDCard中创建与删除文件权限 --&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.MOUNT_UNMOUNT_FILESYSTEMS"</span>/&gt;</span><br><span class="line">&lt;!-- 往SDCard写入数据权限 --&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.WRITE_EXTERNAL_STORAGE"</span>/&gt;</span><br></pre></td></tr></table></figure></p>
<h3 id="分享多条数据"><a href="#分享多条数据" class="headerlink" title="分享多条数据"></a>分享多条数据</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;Uri&gt; imageUris = <span class="keyword">new</span> ArrayList&lt;Uri&gt;();</span><br><span class="line">imageUris.add(imageUri); <span class="comment">// Add your image URIs here</span></span><br><span class="line">imageUris.add(imageUri);</span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.setAction(Intent.ACTION_SEND_MULTIPLE);</span><br><span class="line">intent.putParcelableArrayListExtra(Intent.EXTRA_STREAM, imageUris);</span><br><span class="line">intent.setType(<span class="string">"image/*"</span>);</span><br><span class="line">startActivity(Intent.createChooser(intent, <span class="string">"分享图片"</span>));</span><br></pre></td></tr></table></figure>
<p>这里为了方便仍然使用上面的uri,只不过add了两次。</p>
<p>以上，都是通过给Intent设置一些其他信息：EXTRA_TEXT，EXTRA_STREAM等，并可以设置MIME（多用途互联网邮件扩展）类型。来达到让第三方客户端进行资源匹配的目的。但是，第三方程序需要能够解析他们，如果我们自定义extras，基本是实现不了分享的。我们可以来看一下如何接收其他APP发过来的分享。</p>
<h3 id="接收其他APP的分享内容"><a href="#接收其他APP的分享内容" class="headerlink" title="接收其他APP的分享内容"></a>接收其他APP的分享内容</h3><ul>
<li>在manifest文件中配置filter。比如我们在demo的MainActivity中配置：<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;action android:name="android.intent.action.SEND" /&gt;</span><br><span class="line">    &lt;category android:name="android.intent.category.DEFAULT" /&gt;</span><br><span class="line">    &lt;data android:mimeType="image/*" /&gt;</span><br><span class="line">&lt;/intent-filter&gt;</span><br><span class="line"></span><br><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;action android:name="android.intent.action.SEND" /&gt;</span><br><span class="line">    &lt;category android:name="android.intent.category.DEFAULT" /&gt;</span><br><span class="line">    &lt;data android:mimeType="text/plain" /&gt;</span><br><span class="line">&lt;/intent-filter&gt;</span><br><span class="line"></span><br><span class="line">&lt;intent-filter&gt;</span><br><span class="line">    &lt;action android:name="android.intent.action.SEND_MULTIPLE" /&gt;</span><br><span class="line">    &lt;category android:name="android.intent.category.DEFAULT" /&gt;</span><br><span class="line">    &lt;data android:mimeType="image/*" /&gt;</span><br><span class="line">&lt;/intent-filter&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>再次运行的时候会发现分享的列表中多了demo这个APP。</p>
<ul>
<li>处理传入的数据<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Intent intent = getIntent();</span><br><span class="line">String action = intent.getAction();</span><br><span class="line">String type = intent.getType();</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>拿到action和MIME类型，然后就该干嘛干嘛去了~这里需要注意的是，我们不知道用户传进来的是什么，用户也有可能传错了MIME类型,还有可能传进来的数据非常大，比如一张特别大的图片。所以数据不建议放在UI线程中处理。</p>
<h2 id="使用ShareActionProvider分享数据"><a href="#使用ShareActionProvider分享数据" class="headerlink" title="使用ShareActionProvider分享数据"></a>使用ShareActionProvider分享数据</h2><p>ShareActionProvider是在API等级14以后提供的一种分享方式，与上面的分享对比如下：<br><img src="/images/20160531090856.jpg"></p>
<p>可以发现在UI的显示上还是有很大区别的，ShareActionProvider将分享放在在ActionBar上。使用方法需要现在menu菜单中添加item:<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;item android:id=<span class="string">"@+id/action_share"</span></span><br><span class="line">      app:showAsAction=<span class="string">"never"</span></span><br><span class="line">      android:title=<span class="string">"@string/action_share"</span></span><br><span class="line">      app:actionProviderClass=<span class="string">"android.support.v7.widget.ShareActionProvider"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>然后在onCreateOptionsMenu回调中获取ShareActionProvider：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateOptionsMenu</span><span class="params">(Menu menu)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// Inflate the menu; this adds items to the action bar if it is present.</span></span><br><span class="line">    getMenuInflater().inflate(R.menu.main, menu);</span><br><span class="line"></span><br><span class="line">    MenuItem item = menu.findItem(R.id.action_share);</span><br><span class="line">    mShareActionProvider = (ShareActionProvider) MenuItemCompat.getActionProvider(item);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>通过mShareActionProvider.setShareIntent(intent)设置需要分享的内容，intent的设置方式与前面是一样的。</p>
<p>这里有个坑需要注意下，我在demo中使用的是AppCompatActivity，是在appcompat-v7包中的，它使用的也是这个包中的ActionBar。在Menu菜单中需要配置：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app:actionProviderClass=<span class="string">"android.support.v7.widget.ShareActionProvider"</span></span><br></pre></td></tr></table></figure></p>
<p>在Activity中import android.support.v7.widget.ShareActionProvider并使用MenuItemCompat.getActionProvider(item)的方式获取ShareActionProvider。<br>若不使用appcompat-v7包中的ActionBar,则Menu菜单中设置如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;item android:id=<span class="string">"@+id/action_share"</span></span><br><span class="line">      android:showAsAction=<span class="string">"ifRoom"</span></span><br><span class="line">      android:title=<span class="string">"Share"</span></span><br><span class="line">      android:actionProviderClass=<span class="string">"android.widget.ShareActionProvider"</span> /&gt;</span><br></pre></td></tr></table></figure></p>
<p>然后在onCreateOptionsMenu中，通过一下方式获取ShareActionProvider：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mShareActionProvider = (ShareActionProvider) item.getActionProvider();</span><br></pre></td></tr></table></figure></p>
<p>然后就可以通过setShareIntent(intent)分享了。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[使用ViewPager + RadioGroup实现图片轮播等图片展示功能]]></title>
      <url>http://artharyoung.github.io/2016/05/21/viewpager-image-display/</url>
      <content type="html"><![CDATA[<p>主要实现如下两个效果：<br><img src="/images/device-2016-05-21-165941.png"><br><a id="more"></a><br><img src="/images/device-2016-05-21-170040.png"></p>
<p><a href="https://github.com/artharyoung/ViewPagerImageDisplay" title="源代码" target="_blank" rel="external">源代码</a></p>
<ul>
<li>tips:对于上面的两种效果，参考过网络上许多实现方法，大多数都是通过自定义控件的各项属性等来实现。<br>个人还是倾向于使用android本身提供的控件来实现这两种效果。</li>
</ul>
<h1 id="知识点小结："><a href="#知识点小结：" class="headerlink" title="知识点小结："></a>知识点小结：</h1><ul>
<li><p>通过复写ViewPagerAdapter的getPageWidth(int position)方法来实现多个item的展示：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">float</span> <span class="title">getPageWidth</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>/<span class="number">3f</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>通过获取屏幕参数来动态设置ViewPager的高度来适配phone、pad等不同分辨率的显示效果。（ViewPager无法设置高度wrap_content，只能指定固定高度）</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//获取屏幕像素相关信息</span></span><br><span class="line">DisplayMetrics dm = <span class="keyword">new</span> DisplayMetrics();</span><br><span class="line">getWindowManager().getDefaultDisplay().getMetrics(dm);</span><br><span class="line"></span><br><span class="line"><span class="comment">//根据屏幕信息设置ViewPager容器的宽高,为了适配pad和手机</span></span><br><span class="line">mViewPager.setLayoutParams(<span class="keyword">new</span> LinearLayout.LayoutParams(dm.widthPixels, dm.heightPixels * <span class="number">1</span>/<span class="number">3</span>));</span><br></pre></td></tr></table></figure>
</li>
</ul>
<p>tips:这里注意使用的LayoutParams为ViewPager父布局的属性，比如：父布局为LinearLayout则使用LinearLayout.LayoutParams</p>
<ul>
<li>通过RadioGroup动态添加RadioButton来实现切换图片时“点”的切换。这里有两个小细节需要注意：<br>1、动态添加的RadioButton需要调用setId(int i)手动设置id,否则setOnCheckedChangeListener的时候找不到子View。<br>2、通过setButtonDrawable设置的图片不能居中，始终在View的左边，这是RadioButton源码中onDraw设定的，看到大多数的解决方案都是复写onDraw其实是LayoutParams设置不对，应该使用RadioGroup.LayoutParams然后setMargins实现居中。<a href="http://stackoverflow.com/questions/7905885/margin-set-programmatically-on-radiobutton-not-applied?answertab=active#tab-top" title="stackoverflow" target="_blank" rel="external">stackoverflow</a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">RadioButton tempButton = <span class="keyword">new</span> RadioButton(<span class="keyword">this</span>);</span><br><span class="line">tempButton.setButtonDrawable(R.drawable.game_banner_dot_normal);</span><br><span class="line"></span><br><span class="line">RadioGroup.LayoutParams childParams = <span class="keyword">new</span> RadioGroup.LayoutParams(</span><br><span class="line">            RadioGroup.LayoutParams.WRAP_CONTENT,</span><br><span class="line">            RadioGroup.LayoutParams.WRAP_CONTENT);</span><br><span class="line">childParams.gravity = Gravity.CENTER_HORIZONTAL;</span><br><span class="line">childParams.setMargins((<span class="keyword">int</span>)getResources().getDimension(R.dimen.ui_layout_margin),<span class="number">0</span>,</span><br><span class="line">                    (<span class="keyword">int</span>)getResources().getDimension(R.dimen.ui_layout_margin),<span class="number">0</span>);</span><br><span class="line">tempButton.setId(i);</span><br><span class="line"></span><br><span class="line">mRadioGroup.addView(tempButton,childParams);</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Android序列化 Parcelable与Serializable]]></title>
      <url>http://artharyoung.github.io/2016/05/18/my-new-post/</url>
      <content type="html"><![CDATA[<h2 id="作用："><a href="#作用：" class="headerlink" title="作用："></a>作用：</h2><p>序列化是为了保存在内存中的各种对象的状态(也就是实例变量，不是方法)，并且可以把保存的对象状态再读出来。即：序列化是一种能比较好的保存对象状态的机制。</p>
<h2 id="优点："><a href="#优点：" class="headerlink" title="优点："></a>优点：</h2><ul>
<li>永久性的保存对象，保存对象的字节序列到本地文件中；</li>
<li>通过序列化对象在网络中传递对象；</li>
<li>通过序列化在进程中传递对象；<a id="more"></a>
<h2 id="序列化方法："><a href="#序列化方法：" class="headerlink" title="序列化方法："></a>序列化方法：</h2></li>
<li>实现Serializable接口，JAVA提供的一个序列化接口。它是一个空接口，为对象提供标准的序列化与反序列化操作。</li>
<li>实现Parcelable接口，Google为Android序列化提供的一个接口，只要实现这个接口，一个类的对象就可以实现序列化并可以通过Intent和Binder传递。</li>
</ul>
<h2 id="差异比较："><a href="#差异比较：" class="headerlink" title="差异比较："></a>差异比较：</h2><ul>
<li>在使用内存时，Parcelable比Serializable性能高。</li>
<li>Serializable在序列化时会产生大量的临时变量，引起频繁的GC。</li>
<li>Parcelable不能使用在要将数据储存在磁盘上的情况，因为Parcelable不能很好的保证数据的持续性，在外界有变化的情况下；</li>
</ul>
<h2 id="使用方法："><a href="#使用方法：" class="headerlink" title="使用方法："></a>使用方法：</h2><p>Serializable:<br>在需要序列化的类中实现Sericalizable接口，并添加serialVersionUID。<br>tips:File=&gt;Settings…=&gt;Inspections=&gt;Serialization issues=&gt;Serializable class without ‘serialVersionUID’勾选上。Alt+ Enter自动生成serialVersionUID。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//序列化</span></span><br><span class="line">UserBean userBean = <span class="keyword">new</span> UserBean();</span><br><span class="line">userBean.setAge(<span class="number">24</span>);</span><br><span class="line">userBean.setName(<span class="string">"young"</span>);</span><br><span class="line"></span><br><span class="line">File file = <span class="keyword">new</span> File(<span class="string">"path"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    ObjectOutputStream out = <span class="keyword">new</span> ObjectOutputStream(<span class="keyword">new</span> FileOutputStream(file));</span><br><span class="line">    out.writeObject(userBean);</span><br><span class="line">    out.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//反序列化</span></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    ObjectInputStream in = <span class="keyword">new</span> ObjectInputStream(<span class="keyword">new</span> FileInputStream(file));</span><br><span class="line">    UserBean user = (UserBean) in.readObject();</span><br><span class="line">    in.close();</span><br><span class="line">&#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">    e.printStackTrace();</span><br><span class="line">&#125;<span class="keyword">catch</span> (ClassNotFoundException e1)&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>Parcelable：<br>在需要序列化的类中实现Parcelable接口。通过writeToParcel将你的对象映射成Parcel对象，再通过createFromParcel将parcel映射成你的对象，也可以将Parcel看成是一个流，通过writeToParcel把对象写到流里面，在通过createFromParcel把对象从流里面读取对象，只不过这个过程需要自己来实现，因此写的顺序和读的顺序必须一致；<br>tips:Ctrl + j 选择自动生成Parcelable相关代码，手动补全相关方法。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> android.os.Parcel;</span><br><span class="line"><span class="keyword">import</span> android.os.Parcelable;</span><br><span class="line"><span class="keyword">import</span> android.support.annotation.NonNull;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserBean</span> <span class="keyword">implements</span> <span class="title">Parcelable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getAge</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAge</span><span class="params">(<span class="keyword">int</span> age)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.age = age;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="title">UserBean</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//顺序与writeToParcel中保持一致，否则反序列化时会错位</span></span><br><span class="line">        name = in.readString();</span><br><span class="line">        age = in.readInt();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">describeContents</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">writeToParcel</span><span class="params">(@NonNull Parcel dest, <span class="keyword">int</span> flags)</span> </span>&#123;</span><br><span class="line">        dest.writeString(name);</span><br><span class="line">        dest.writeInt(age);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Creator&lt;UserBean&gt; CREATOR = <span class="keyword">new</span> Creator&lt;UserBean&gt;() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> UserBean <span class="title">createFromParcel</span><span class="params">(Parcel in)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> UserBean(in);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> UserBean[] newArray(<span class="keyword">int</span> size) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> UserBean[size];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>使用：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送</span></span><br><span class="line">Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">intent.putExtra(<span class="string">"parcelable"</span>,userBean);</span><br><span class="line"><span class="comment">//接收</span></span><br><span class="line">intent.getParcelableExtra(<span class="string">"parcelable"</span>);</span><br></pre></td></tr></table></figure></p>
]]></content>
    </entry>
    
  
  
</search>
